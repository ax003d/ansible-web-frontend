---

- name: add certbot ppa
  when: frontend_ssl.certbot.active|bool and frontend_ssl.enabled|bool
  apt_repository: repo='ppa:certbot/certbot'

- name: install certbot
  when: frontend_ssl.certbot.active|bool and frontend_ssl.enabled|bool
  apt: name=certbot state=present

- name: install nginx
  apt: name=nginx state=present

- name: configure nginx
  template:
    src=templates/nginx.conf.j2
    dest=/etc/nginx/conf.d/nginx.conf


- name: ssl • fetch certbot cert • enable default nginx vhost
  when: frontend_ssl.certbot.active|bool and frontend_ssl.enabled|bool
  file:
    src=/etc/nginx/sites-available/default
    dest=/etc/nginx/sites-enabled/default
    state=link

- name: ssl • fetch certbot cert • disable our nginx vhost
  when: frontend_ssl.certbot.active|bool and frontend_ssl.enabled|bool
  file: path=/etc/nginx/sites-enabled/{{ frontend_config_name }} state=absent

- name: ssl • fetch certbot cert • (re)start nginx
  when: frontend_ssl.certbot.active|bool and frontend_ssl.enabled|bool
  service:
    name: nginx
    state: restarted
    use: service

- name: ssl • fetch certbot cert
  when: frontend_ssl.certbot.active|bool and frontend_ssl.enabled|bool
  command: >
    certbot certonly --non-interactive --agree-tos --webroot
    -w {{ frontend_certbot_webroot }}
    -d {{ frontend_ssl.domain }}
    --email {{ frontend_ssl.certbot.email }}

- name: ssl • self-sign fallback cert • ensure root dir
  when: frontend_ssl.enabled|bool
  file:
    path: "{{ frontend_selfsigned_ssl_root }}"
    state: directory

- name: ssl • self-sign fallback cert
  when: frontend_ssl.enabled|bool
  command: >
    openssl req
    -x509 -nodes -days 365 -newkey rsa:2048
    -subj '/CN=localhost'
    -keyout "{{ frontend_selfsigned_ssl.key_path }}"
    -out "{{ frontend_selfsigned_ssl.certificate_path }}"


- name: disable default nginx vhost
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: create our nginx vhost
  template:
    src=templates/nginx_vhost.conf.j2
    dest=/etc/nginx/sites-available/{{ frontend_config_name }}

- name: symlink our nginx vhost
  file:
    src=/etc/nginx/sites-available/{{ frontend_config_name }}
    dest=/etc/nginx/sites-enabled/{{ frontend_config_name }} state=link
  notify:
    - restart nginx

- name: check nginx config
  command: nginx -t

- name: enable nginx
  service:
    name: nginx
    state: started
    enabled: yes
    use: service
